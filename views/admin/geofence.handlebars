<div id="map"></div>
<script>
function runMaps() {
if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {

            map = new google.maps.Map(document.getElementById('map'), {
                center: {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                },
                zoom: 18
            });

            var all_overlays = [];
            var selectedShape;
            var drawingManager = new google.maps.drawing.DrawingManager({
                drawingMode: google.maps.drawing.OverlayType.MARKER,
                drawingControl: true,
                drawingControlOptions: {
                    position: google.maps.ControlPosition.TOP_CENTER,
                    drawingModes: [
                        google.maps.drawing.OverlayType.MARKER,
                        google.maps.drawing.OverlayType.CIRCLE,
                        google.maps.drawing.OverlayType.POLYGON,
                        google.maps.drawing.OverlayType.RECTANGLE
                    ]
                },
                circleOptions: {
                    fillColor: '#ffff00',
                    fillOpacity: 0.5,
                    strokeWeight: 3,
                    clickable: false,
                    editable: true,
                    zIndex: 1
                },
                polygonOptions: {
                    clickable: true,
                    draggable: true,
                    editable: true,
                    fillColor: '#ffff00',
                    fillOpacity: 1,

                },
                rectangleOptions: {
                    clickable: true,
                    draggable: true,
                    editable: true,
                    fillColor: '#ffff00',
                    fillOpacity: 0.5,
                }
            });

            google.maps.event.addListener(map, 'click', function(event) {
                console.log('click');
                placeMarker(map, event.latLng);
            });

            function placeMarker(map, location) {
                var marker = new google.maps.Marker({
                    position: location,
                    map: map,
                });
            }
            function clearSelection() {
                if (selectedShape) {
                    selectedShape.setEditable(false);
                    selectedShape = null;
                }
            }

            function send_to_server(payload) {
                // console.log(JSON.stringify(payload));
                let params = window.location.search.substring(1);
                let id = params.split("=")[1];
                payload["id"] = id;
                $.ajax({
                    url: '/admin/home/geofence',
                    type: 'POST',
                    data: JSON.stringify(payload),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function(msg) { console.log(msg) }
                })
            }

            function translate_marker(pos) {
                let marker_lat = pos.lat();
                let marker_lng = pos.lng();
                let params = window.location.search.substring(1);
                let id = params.split("=")[1];
                let payload = {
                    "type": "marker",
                    "position": {
                        "latitude": marker_lat,
                        "longitude": marker_lng
                    },
                    "id": id
                }
                $.ajax({
                    url: '/admin/home/geofence',
                    type: 'POST',
                    data: JSON.stringify(payload),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function(msg) { console.log(msg) }
                })

            }

            function translate_to_lat_long() {
                if(!selectedShape) {
                    snackbarFunction('Please make a selection');
                } else {
                    snackbarFunction('Saving, Please wait...')
                    if(selectedShape.type === 'circle') {
                        let radius = selectedShape.radius;
                        let center_lat = selectedShape.center.lat();
                        let center_lng = selectedShape.center.lng();
                        let payload = {
                            "type": "circle",
                            "position": {
                                "center": {
                                    "latitude": center_lat,
                                    "longitude": center_lng
                                },
                                "radius": radius 
                            }
                        };
                        send_to_server(payload);
                    } else if(selectedShape.type === 'rectangle') {
                        let ne_lng = selectedShape.bounds.getNorthEast().lng();
                        let ne_lat = selectedShape.bounds.getNorthEast().lat();
                        let sw_lng = selectedShape.bounds.getSouthWest().lng();
                        let sw_lat = selectedShape.bounds.getSouthWest().lat();
                        let payload = {
                            "type": "rectangle",
                            "position": {
                                "top_right": {
                                    "latitude": ne_lat,
                                    "longitude": ne_lng
                                },
                                "bottom_left": {
                                    "latitude": sw_lat,
                                    "longitude": sw_lng
                                }
                            }
                        };
                        send_to_server(payload);
                    } else if(selectedShape.type === 'polygon') {
                        let coods = []
                        for(let i = 0; i < selectedShape.getPath().getLength(); i++) {
                            let xy = selectedShape.getPath().getAt(i);
                            let point = { 'latitude': xy.lat(), 'longitude': xy.lng() };
                            coods.push(point);
                        }
                        let payload = {
                            "type": "polygon",
                            "position": coods
                        };
                        send_to_server(payload);
                    }
                }
            }

            function setSelection(shape) {
                clearSelection();
                selectedShape = shape;
                shape.setEditable(true);
            }

            function deleteSelectedShape() {
                if (selectedShape) {
                    selectedShape.setMap(null);
                    selectedShape = null;
                }
            }

            function deleteAllShape() {
                for (var i = 0; i < all_overlays.length; i++) {
                    all_overlays[i].overlay.setMap(null);
                }
                all_overlays = [];
            }

            function CenterControl(controlDiv, map) {

                // Set CSS for the control border.
                var controlUI = document.createElement('div');
                controlUI.style.cursor = 'pointer';
                controlUI.style.marginBottom = '22px';
                controlUI.style.textAlign = 'center';
                controlUI.style.display = 'flex';
                controlDiv.appendChild(controlUI);

                // Set CSS for the control interior.
                var controlText = document.createElement('div');
                controlText.style.color = 'rgb(25,25,25)';
                controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
                controlText.style.fontSize = '16px';
                controlText.style.lineHeight = '38px';
                controlText.style.paddingLeft = '5px';
                controlText.style.marginRight = '5px';
                controlText.style.paddingRight = '5px';
                controlText.style.border = '1px black solid';
                controlText.innerHTML = 'Delete Selected Area';
                controlUI.appendChild(controlText);


                var sendSelection = document.createElement('div');
                sendSelection.style.color = 'rgb(25,25,25)';
                sendSelection.style.fontFamily = 'Roboto,Arial,sans-serif';
                sendSelection.style.fontSize = '16px';
                sendSelection.style.lineHeight = '38px';
                sendSelection.style.paddingLeft = '5px';
                sendSelection.style.marginLeft = '5px';
                sendSelection.style.paddingRight = '5px';
                sendSelection.style.border = '1px black solid';
                sendSelection.innerHTML = 'Save Selected Area';
                controlUI.appendChild(sendSelection);

                // Setup the click event listeners: simply set the map to Chicago.
                controlText.addEventListener('click', function() {
                    deleteSelectedShape();
                });

                sendSelection.addEventListener('click', function() {
                    translate_to_lat_long();
                })
            }
            drawingManager.setMap(map);
            var getPolygonCoords = function(newShape) {
                console.log("We are one");
                var len = newShape.getPath().getLength();
                for (var i = 0; i < len; i++) {
                    console.log(newShape.getPath().getAt(i).toUrlValue(6));
                }
            };

            google.maps.event.addListener(drawingManager, 'polygoncomplete', function(event) {

                event.getPath().getLength();
                google.maps.event.addListener(event.getPath(), 'insert_at', function() {
                    var len = event.getPath().getLength();
                    for (var i = 0; i < len; i++) {
                        console.log(event.getPath().getAt(i).toUrlValue(5));
                    }
                });
                google.maps.event.addListener(event.getPath(), 'set_at', function() {
                    var len = event.getPath().getLength();
                    for (var i = 0; i < len; i++) {
                        console.log(event.getPath().getAt(i).toUrlValue(5));
                    }
                });
            });

            google.maps.event.addListener(drawingManager, 'overlaycomplete', function(event) {
                all_overlays.push(event);
                if (event.type !== google.maps.drawing.OverlayType.MARKER) {
                    drawingManager.setDrawingMode(null);
                    //Write code to select the newly selected object.

                    var newShape = event.overlay;
                    newShape.type = event.type;
                    google.maps.event.addListener(newShape, 'click', function() {
                        setSelection(newShape);
                    });

                    setSelection(newShape);
                } else {
                    translate_marker(event.overlay.position);
                }
            });


            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv, map);

            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);
        });
    }
};
runMaps();
</script>